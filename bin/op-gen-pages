#!/usr/bin/env python

from optparse import OptionParser
import os
import sys

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "openn.settings")

from django.core import serializers
from django.conf import settings

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from openn.models import *
from openn.openn_exception import OPennException
from openn.openn_functions import *
from openn.pages.pages import Pages
from openn.pages.collections import Collections
from openn.pages.table_of_contents import TableOfContents
from openn.pages.browse import Browse

def cmd():
    return os.path.basename(__file__)

def main(cmdline=None):
    """op-prep main
    """
    status = 0
    parser = make_parser()

    opts, args = parser.parse_args(cmdline)

    print Document.objects.all()
    try:
        pages = []
        pages.append(Collections('3_Collections.html', settings.STAGING_DIR))
        pages.append(
            TableOfContents('medren', **{
                'template_name': 'TableOfContents.html',
                'outdir': settings.STAGING_DIR
            }))
        for doc in Document.objects.all():
            pages.append(Browse(doc.id, **{ 'outdir': settings.STAGING_DIR }))

        for page in pages:
            page.create_pages()
    except OPennException as ex:
        # error_no_exit(cmd(), str(ex))
        status = 4
        parser.error(str(ex))

    return status


def make_parser():
    """get_xml option parser"""

    usage = """%prog

Update all the pages for objects in OPenn

"""

    parser = OptionParser(usage)

    return parser

if __name__ == "__main__":
    sys.exit(main(sys.argv[1:]))
