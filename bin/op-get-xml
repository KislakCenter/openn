#!/usr/bin/env python

import urllib2

"""Module summary

Given BIBID and CALL_NUMBER, grab the XML for the given manuscript
from Penn In Hand and write out the XML as CALL_NUMBER.xml.
"""

# optparse is both easy to use and produces clean code
# the main optparse docs can be found here:
# http://docs.python.org/library/optparse.html
# there's a much better tutorial that works you through optparse
# starting with a simple example and slowly adding complexity.
from optparse import OptionParser
import os
import sys


def get_xml(bibid):
    url = 'http://dla.library.upenn.edu/dla/medren/pageturn.xml?id=MEDREN_' + str(bibid)
    return urllib2.urlopen(url).read()

def main(cmdline=None):
    """Get XML main function.
    """
    parser = make_parser()

    opts, args = parser.parse_args(cmdline)

    if len(args) != 1:
        parser.error('Wrong number of arguments')

    print get_xml(args[0])
    return 0


def make_parser():
    """get_xml option parser"""

    usage = """%prog BIBID

Get the Penn in Hand XML for the given BIBID.
"""

    parser = OptionParser(usage)

    return parser

if __name__ == "__main__":
    # this runs when the application is run from the command
    # it grabs sys.argv[1:] which is everything after the program name
    # and passes it to main
    # the return value from main is then used as the argument to
    # sys.exit, which you can test for in the shell.
    # program exit codes are usually 0 for ok, and non-zero for something
    # going wrong.
    sys.exit(main(sys.argv[1:]))